/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package olc1.proyecto1_202002591;
import Analizador.Lexico;
import Analizador.Parser;
import Errores.*;
import Tokens.*;
import AnaJson.Lex;
import AnaJson.Sintactico;
import Analizador.sym;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.StringReader;
import java.util.Scanner;
import java_cup.runtime.Symbol;
import javax.swing.JFileChooser;
import DatosJson.Acciones;
import org.jfree.data.category.DefaultCategoryDataset;
import java.awt.Desktop;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
/**
 *
 * @author SEBASTIAN ZAMORA
 */
public class Interfaz extends javax.swing.JFrame {
    File texto = null;
    /**
     * Creates new form Interfaz
     */
   String analizador="";
   String tituloJson="";
   String salida ="";
   Acciones acciones = new Acciones();
  ArrayList<Excepcion> erroresLexicos = new ArrayList<Excepcion>() ;
  ArrayList<token> tokens = new ArrayList<token>() ;
   ArrayList<Excepcion> erroresSintacticos = new ArrayList<Excepcion>() ;
   DefaultCategoryDataset dataset = new DefaultCategoryDataset();
   
    public Interfaz() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("VentanaP"); // NOI18N
        getContentPane().setLayout(new java.awt.CardLayout());

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jLabel1.setText("Entrada:");

        jLabel2.setText("Salida:");

        jLabel3.setText("Analizador:");

        jButton1.setText("Ejecutar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(202, 202, 202)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, "card2");

        jMenuBar1.setName(""); // NOI18N

        jMenu1.setText("Archivo");

        jMenuItem1.setText("Abrir archivo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Guardar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Gurdar Como");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Analizador");

        jMenuItem4.setText("StatPy");
        jMenuItem4.setName(""); // NOI18N
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem5.setText("Json");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        jMenu4.setText("Reporte");

        jMenuItem6.setText("Reporte de Tokens:");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem6);

        jMenuItem7.setText("Reporte de Errores LÃ©xicos");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem7);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int seleccion = fileChooser.showSaveDialog(jTextArea1);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            String contenido = " ";

            texto = fileChooser.getSelectedFile();
            
            File archivoSeleccionado = fileChooser.getSelectedFile();
            tituloJson = archivoSeleccionado.getName(); 
            
            System.out.println(tituloJson);
        
            try {
                Scanner input = new Scanner(texto);
                while (input.hasNextLine()) {
                    contenido += input.nextLine() + "\n";
                }
                input.close();
            } catch (Exception ex) {
                ex.printStackTrace();

    }                                        
            jTextArea1.setText(contenido);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        try {
            FileWriter writer = new FileWriter(texto);
            writer.write(jTextArea1.getText());
            writer.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error al guardar el archivo.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        System.out.println("Eligio Analizador StatPy ");
        analizador = "StatPy";
         jLabel4.setText("Statpy");
    }//GEN-LAST:event_jMenuItem4ActionPerformed
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        
                String entrada = jTextArea1.getText();
                if (analizador == "StatPy"){

                
                    try {
                        Lexico scanner = new Lexico(new java.io.StringReader(entrada));
                        Parser parser = new Parser(scanner);
                   
                        parser.llenarAccion(acciones);
                        parser.parse();
                        salida = parser.textoSalida();
                        erroresSintacticos.clear();
                        erroresLexicos.clear();
                        tokens.clear();
                        erroresSintacticos =  parser.ArrayError();
                        erroresLexicos = scanner.ArrayError();
                        tokens = scanner.ArrayToken();
                    
                        jTextArea2.setText(salida);
                        System.out.println("Analisis finalizado Statpy");
                                  // generar reporte de errores lexicos
                                  String contend ="";
           for (Excepcion elemento : erroresLexicos) {
        contend+=                   "			<tr>\n" +
"				<td>"+elemento.getLexema()+"</td>\n" +
"				<td>"+elemento.getDescripcion()+"</td>\n" +
"				<td>"+elemento.getLinea()+"</td>\n" +
"				<td>"+elemento.getColumna()+"</td>\n" +
"			</tr>\n";
        }
         
       HtmlError.error_lexico(contend);
            
                                 String tok = "";
                                  // generar reporte de errores lexicos
           for (token elemento : tokens) {
        tok+=                   "			<tr>\n" +
"				<td>"+elemento.getLexema()+"</td>\n" +
"				<td>"+elemento.getToken()+"</td>\n" +
"				<td>"+elemento.getLinea()+"</td>\n" +
"				<td>"+elemento.getColumna()+"</td>\n" +
"			</tr>\n";
        }
         
       HtmlToken.insertarToken(tok);
            
         
             scanner.LimpiarLex();
                        scanner.LimpiarToken();
                        parser.LimpiarSin();

        
                    
                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                } else if (analizador == "Json"){
                    String titulo = "NombreJson: \""+tituloJson+"\"\n ";
                    try {
                        Lex scanner = new Lex(new java.io.StringReader(titulo+entrada));
                        Sintactico parser = new Sintactico(scanner);
                        parser.llenarAccion(acciones);
                        parser.parse();
                        erroresSintacticos.clear();
                        erroresLexicos.clear();
                        tokens.clear();
                        erroresSintacticos =  parser.ArrayError();
                        erroresLexicos = scanner.ArrayError();
                        tokens = scanner.ArrayToken();
                        acciones = parser.ver();
                        acciones.printAllData();
                   
                        System.out.println("Analisis finalizado Json");
                              String contend = "";
                                  // generar reporte de errores lexicos
           for (Excepcion elemento : erroresLexicos) {
        contend+=                   "			<tr>\n" +
"				<td>"+elemento.getLexema()+"</td>\n" +
"				<td>"+elemento.getDescripcion()+"</td>\n" +
"				<td>"+elemento.getLinea()+"</td>\n" +
"				<td>"+elemento.getColumna()+"</td>\n" +
"			</tr>\n";
        }
         
       HtmlError.error_lexico(contend);
            
                                 String tok = "";
                                  // generar reporte de errores lexicos
           for (token elemento : tokens) {
        tok+=                   "			<tr>\n" +
"				<td>"+elemento.getLexema()+"</td>\n" +
"				<td>"+elemento.getToken()+"</td>\n" +
"				<td>"+elemento.getLinea()+"</td>\n" +
"				<td>"+elemento.getColumna()+"</td>\n" +
"			</tr>\n";
        }
         
       HtmlToken.insertarToken(tok);
             scanner.LimpiarLex();
                        scanner.LimpiarToken();
                        parser.LimpiarSin();

                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        System.out.println("Eligio Analizador Json");
        analizador = "Json";
        jLabel4.setText("Json");
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        try {
            // Verifica si el sistema permite la interacciÃ³n con el escritorio
            if (Desktop.isDesktopSupported()) {
                File archivoHTML = new File("M:\\Sebastian Zamora\\Documents\\NetBeansProjects\\[OLC1]Proyecto1_202002591\\Reportes\\Tokens.html");

                // Verifica si el archivo HTML existe
                if (archivoHTML.exists()) {
                    // Abre el archivo HTML en el navegador predeterminado
                    Desktop.getDesktop().browse(archivoHTML.toURI());
                } else {
                    System.out.println("El archivo HTML no existe en la ruta especificada.");
                }
            } else {
                System.out.println("La operaciÃ³n no es compatible en este sistema.");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
                try {
            // Verifica si el sistema permite la interacciÃ³n con el escritorio
            if (Desktop.isDesktopSupported()) {
                File archivoHTML = new File("M:\\Sebastian Zamora\\Documents\\NetBeansProjects\\[OLC1]Proyecto1_202002591\\Reportes\\Errores.html");

                // Verifica si el archivo HTML existe
                if (archivoHTML.exists()) {
                    // Abre el archivo HTML en el navegador predeterminado
                    Desktop.getDesktop().browse(archivoHTML.toURI());
                } else {
                    System.out.println("El archivo HTML no existe en la ruta especificada.");
                }
            } else {
                System.out.println("La operaciÃ³n no es compatible en este sistema.");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
            JFileChooser fileChooser = new JFileChooser();
            int resultado = fileChooser.showSaveDialog(this);
            if (resultado == JFileChooser.APPROVE_OPTION) {
                texto = fileChooser.getSelectedFile();
                        try {
                    FileWriter writer = new FileWriter(texto);
                    writer.write(jTextArea1.getText());
                    writer.close();
                            } catch (IOException e) {
                                JOptionPane.showMessageDialog(this, "Error al guardar el archivo.", "Error", JOptionPane.ERROR_MESSAGE);
                            }
            }
        
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
